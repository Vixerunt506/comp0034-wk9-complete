# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  jobubuntu:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.12
        uses: actions/setup-python@v3
        with:
          python-version: "3.12"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest selenium pytest-cov pytest-flask 
          pip install -e .
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          python -m pip install dash\[testing]
      - name: Test with pytest (Dash Multipage app)
        run: |
          python -m pytest tests/test_dash_multipage -v
      - name: Test with pytest (Flask Iris ML app)
        run: |
          python -m pytest tests/tests_iris -v
      - name: Test with pytest (Dash paralympics)
        run: |
          python -m pytest tests/tests_paralympics_dash -v
      - name: Test with pytest (Flask paralympics app)
        run: |
          python -m pytest tests/tests_paralympics_flask -v
#      - name: Test with pytest and Pytest-Flask (Dash Paralympics)
#        run: |
#          python -m pytest tests/test_para_with_pytest_flask -v
#
#
#  jobwindows:
#
#    runs-on: windows-latest
#
#    steps:
#      - uses: actions/checkout@v3
#      - name: Set up Python 3.12
#        uses: actions/setup-python@v3
#        with:
#          python-version: "3.12"
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install flake8 pytest selenium pytest-cov pytest-flask
#          pip install -r requirements.txt
#          pip install dash[testing]
#          pip install -e .
#      - name: Lint with flake8
#        run: |
#          # stop the build if there are Python syntax errors or undefined names
#          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#      - name: Test with pytest
#        run: |
#          python -m pytest -v
